https://leetcode.com/problems/3sum/description/
class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) 
    {
        int j=0,k=nums.size()-1,n=nums.size();
        long long  sum=0;
        sort(nums.begin(),nums.end());
        vector<vector<int>>ans;
        for(int i=0;i<nums.size();i++) 
        {
            j=i+1,k=n-1;
            if ((i>0) && (nums[i]==nums[i-1])) continue;
            while(j<k)
            {
                sum=nums[i]+nums[j]+nums[k];
               if(sum<0){
                    j++;
                }
                else if(sum>0){
                    k--;
                }
                else 
                {
                    ans.push_back({nums[i],nums[j],nums[k]});
                     while(j<n-1 && nums[j+1]==nums[j]   )j++;
                     while(j<k && nums[k-1]==nums[k])k--;
                     j++;k--; 
                }
            }
           
        }
        return ans;
    }
};
